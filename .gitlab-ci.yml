image: python:3.10

variables:
  DOCKER_IMAGE: $CI_REGISTRY_IMAGE
  DOCKER_TAG: $CI_COMMIT_SHORT_SHA

.ssh_key_template: &ssh_key_template
  before_script:
    - chmod 400 $SSH_PRIVATE_KEY
    - mkdir -p ~/.ssh
    - cp $SSH_PRIVATE_KEY ~/.ssh/id_rsa
    - chmod 400 ~/.ssh/id_rsa

  after_script:
    - rm -f ~/.ssh/id_rsa

.docker_login: &docker_login
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

.docker_common: &docker_common
  image: docker
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:20.10.5-dind

stages:
  - prepare
  - build
  - lint
  - tests
  - deploy

pull_model:
  <<: *ssh_key_template
  stage: prepare
  script:
    - sudo apt-get install sshpass
    - make install_dvc
    - make init_dvc
    - make download_weights
  artifacts:
    paths:
      - weights/*.pt
    expire_in: 1 hour

build_image_test:
  stage: build
  <<: *docker_common
  script:
    - *docker_login
    - docker pull $DOCKER_IMAGE:test_latest || true
    - docker build --cache-from $DOCKER_IMAGE:test_latest --target test --tag ${DOCKER_IMAGE}:test_${DOCKER_TAG} --tag ${DOCKER_IMAGE}:test_latest .
    - docker push ${DOCKER_IMAGE}:test_${DOCKER_TAG}
    - docker push ${DOCKER_IMAGE}:test_latest
  needs:
    - pull_model

build_image_prod:
  stage: build
  <<: *docker_common
  script:
    - *docker_login
    - docker pull $DOCKER_IMAGE:prod_latest || true
    - docker build --cache-from $DOCKER_IMAGE:prod_latest --target prod --tag ${DOCKER_IMAGE}:prod_${DOCKER_TAG} --tag ${DOCKER_IMAGE}:prod_latest .
    - docker push ${DOCKER_IMAGE}:prod_${DOCKER_TAG}
    - docker push ${DOCKER_IMAGE}:prod_latest
  needs:
    - pull_model

lint:
  stage: lint
  <<: *docker_common
  script:
    - *docker_login
    - docker pull ${DOCKER_IMAGE}:test_${DOCKER_TAG}
    - docker run ${DOCKER_IMAGE}:test_${DOCKER_TAG} python -m flake8 --config=setup.cfg ./src
    - docker run ${DOCKER_IMAGE}:test_${DOCKER_TAG} python -m mypy --config-file=pyproject.toml ./src
  needs:
    - build_image_test

tests:
  stage: tests
  <<: *docker_common
  script:
    - *docker_login
    - docker pull ${DOCKER_IMAGE}:test_${DOCKER_TAG}
    - docker run ${DOCKER_IMAGE}:test_${DOCKER_TAG} python -m pytest
  needs:
    - build_image_prod
    - pull_model

deploy:
  stage: deploy
  variables:
    ANSIBLE_HOST_KEY_CHECKING: "false"
  script:
    - sudo apt-get install sshpass
    - python3 -m pip install ansible==6.0.0
    - make deploy DOCKER_IMAGE=${DOCKER_IMAGE} DOCKER_TAG=prod_${DOCKER_TAG}

  when: manual
  <<: *ssh_key_template

destroy:
  stage: deploy
  variables:
    ANSIBLE_HOST_KEY_CHECKING: "false"
  script:
    - python3 -m pip install ansible==6.0.0
    - make destroy

  when: manual
  <<: *ssh_key_template
